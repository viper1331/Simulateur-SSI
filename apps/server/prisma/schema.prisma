generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../db/dev.db"
}

enum UserRole {
  TRAINER
  TRAINEE
}

model User {
  id             String   @id @default(cuid())
  name           String
  email          String   @unique
  passwordHash   String
  role           UserRole
  createdAt      DateTime @default(now())
  runsAsTrainee  Run[]    @relation("RunsAsTrainee")
  runsAsTrainer  Run[]    @relation("RunsAsTrainer")
}

model Scenario {
  id          String   @id
  name        String
  description String
  config      String
  events      Event[]
  createdAt   DateTime @default(now())
  runs        Run[]
}

model Event {
  id         String   @id @default(cuid())
  scenario   Scenario @relation(fields: [scenarioId], references: [id])
  scenarioId String
  type       String
  payload    String
  offset     Int
  createdAt  DateTime @default(now())
}

model Run {
  id         String   @id @default(cuid())
  scenario   Scenario @relation(fields: [scenarioId], references: [id])
  scenarioId String
  trainee    User     @relation("RunsAsTrainee", fields: [traineeId], references: [id])
  traineeId  String
  trainer    User     @relation("RunsAsTrainer", fields: [trainerId], references: [id])
  trainerId  String
  startedAt  DateTime @default(now())
  endedAt    DateTime?
  score      Int      @default(0)
  status     String   @default("pending")
  actions    Action[]
  scores     Score[]
}

model Action {
  id        String   @id @default(cuid())
  run       Run      @relation(fields: [runId], references: [id])
  runId     String
  type      String
  payload   String
  createdAt DateTime @default(now())
}

model Score {
  id        String   @id @default(cuid())
  run       Run      @relation(fields: [runId], references: [id])
  runId     String
  label     String
  delta     Int
  createdAt DateTime @default(now())
}
